import { Metaplex } from "@metaplex-foundation/js";
import { Connection, PublicKey } from "@solana/web3.js";

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Solana
const connection = new Connection("https://api.devnet.solana.com", "confirmed");
const metaplex = Metaplex.make(connection);

// üìå `Mint Address` Master NFT
const MASTER_NFT_MINT = new PublicKey("6umTtienmQxTthD7mUBuvpmanCKU3gNBmBvXC1zYYJkD");

async function findEditionsOfMasterNFT() {
    console.log(`üîç –ò—â–µ–º –∫–æ–ø–∏–∏ Master NFT: ${MASTER_NFT_MINT.toBase58()}`);

    // üìå –ü–æ–ª—É—á–∞–µ–º Master NFT
    const masterNFT = await metaplex.nfts().findByMint({ mintAddress: MASTER_NFT_MINT });

    console.log("\n‚úÖ Master NFT –Ω–∞–π–¥–µ–Ω:");
    console.log(`- Name: ${masterNFT.name}`);
    console.log(`- Symbol: ${masterNFT.symbol}`);
    console.log(`- URI: ${masterNFT.uri}`);

    // üìå –ü–æ–ª—É—á–∞–µ–º `Current Supply` (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–∏–Ω—á–µ–Ω–Ω—ã—Ö –∫–æ–ø–∏–π)
    const editionAccount = await metaplex.nfts().pdas().edition({ mint: MASTER_NFT_MINT });
    const editionData = await connection.getAccountInfo(editionAccount);

    let currentSupply = 0;
    if (editionData && editionData.data.length >= 2) {
        currentSupply = editionData.data[1] || 0; // `Current Supply`
    }

    console.log(`- Current Supply: ${currentSupply}`);

    // üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ø–∏–∏
    if (currentSupply === 0) {
        console.log("\n‚ùå –£ Master NFT –Ω–µ—Ç –∫–æ–ø–∏–π.");
        return;
    }

    console.log("\nüîç –ò—â–µ–º –∫–æ–ø–∏–∏ —á–µ—Ä–µ–∑ `findAllByMintList()`...");

    // üìå –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ `Mint Addresses` —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–ø–∏–π —á–µ—Ä–µ–∑ `printNewEdition()`
    const editionPDAs = [];
    for (let i = 1; i <= currentSupply; i++) {
        const editionPDA = await metaplex.nfts().pdas().edition({ mint: MASTER_NFT_MINT });
        editionPDAs.push(editionPDA);
    }

    // üìå –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–æ–ø–∏—è—Ö
    const editions = await metaplex.nfts().findAllByMintList({ mints: editionPDAs });

    // üìå –ò—Å–∫–ª—é—á–∞–µ–º `null`-–∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    const validEditions = editions.filter(edition => edition !== null);

    if (validEditions.length === 0) {
        console.log("\n‚ùå –ö–æ–ø–∏–∏ Master NFT –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
        return;
    }

    console.log("\nüìú –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–ø–∏–∏ (Editions):");
    validEditions.forEach((edition, index) => {
        console.log(`#${index + 1}: ${edition.address.toBase58()}`);
    });

    console.log(`\nüîç –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–ø–∏–π: ${validEditions.length}`);
}

findEditionsOfMasterNFT().catch(console.error);
